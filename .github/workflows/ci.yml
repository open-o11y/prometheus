name: ci

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: circleci/golang:1.15-node
  #   steps:
  #     - name: setup file system permissions
  #       run: sudo chmod -R 777 $GITHUB_WORKSPACE /github /__w/_temp
  #     - name: checkout repo
  #       uses: actions/checkout@v2
  #     - name: make promu
  #       run: make promu
  #     - run: make
  #       env:
  #         GOGC: "20"
  #         GOOPTS: "-p 2"
  #         GOMAXPROCS: "2"
  #     - name: prometheus/check_proto
  #       env:
  #         VERSION: 3.12.3
  #       run: |
  #         curl -s -L https://github.com/protocolbuffers/protobuf/releases/download/v3.12.3/protoc-3.12.3-linux-x86_64.zip > /tmp/protoc.zip
  #         unzip -d /tmp /tmp/protoc.zip
  #         chmod +x /tmp/bin/protoc
  #         echo "::add-path::/tmp/bin/"
  #     - run: make proto
  #     - run: git diff --exit-code
  #     - name: prometheus/store_artifact prometheus
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: prometheus
  #         path: prometheus
  #     - name: prometheus/store_artifact promtool
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: promtool
  #         path: promtool
  # test_windows:
  #   runs-on: windows-latest
  #   steps:
  #     - name: checkout repo
  #       uses: actions/checkout@v2
  #     - name: "update golang"
  #       # windows-latest comes with Go 1.14.9, not Go 1.15
  #       run: choco upgrade -y golang
  #       shell: bash
  #     - name: run tests
  #       shell: bash
  #       run: |
  #         (cd web/ui && GOOS= GOARCH= go generate -mod=vendor)
  #         go test -mod=vendor -vet=off -test.v `go list ./...|grep -Exv "(github.com/prometheus/prometheus/discovery.*|github.com/prometheus/prometheus/config|github.com/prometheus/prometheus/web)"`
  #       env:
  #         GOGC: "20"
  #         GOOPTS: "-p 2 -mod=vendor"
  # test_mixins:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: circleci/golang:1.15-node
  #   steps:
  #     - name: setup file system permissions
  #       run: sudo chmod -R 777 $GITHUB_WORKSPACE /github /__w/
  #     - name: checkout repo
  #       uses: actions/checkout@v2
  #     - run: go install -mod=vendor ./cmd/promtool/.
  #     - run: go install -mod=readonly github.com/google/go-jsonnet/cmd/jsonnet github.com/google/go-jsonnet/cmd/jsonnetfmt github.com/jsonnet-bundler/jsonnet-bundler/cmd/jb
  #       working-directory: documentation/prometheus-mixin
  #     - run: make clean
  #       working-directory: documentation/prometheus-mixin
  #     - run: jb install
  #       working-directory: documentation/prometheus-mixin
  #     - run: make
  #       working-directory: documentation/prometheus-mixin
  #     - run: git diff --exit-code
  #       working-directory: documentation/prometheus-mixin
  # fuzzit_regression:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: fuzzitdev/golang:1.12.7-buster
  #   steps:
  #     - name: setup file system permissions
  #       run: chmod -R 777 $GITHUB_WORKSPACE /github /__w/
  #     - run: echo "$(GOPATH)"
  #     - name: checkout repo
  #       uses: actions/checkout@v2
  #     - name: Install Docker Client
  #       run: |
  #         set -x
  #         VER="17.03.0-ce"
  #         curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
  #         tar -xz -C /tmp -f /tmp/docker-$VER.tgz
  #         mv /tmp/docker/* /usr/bin
  #     - name: Sym Link Expected Path to Workspace
  #       run: |
  #         mkdir -p /go/src/github.com/prometheus/prometheus
  #         ln -s $GITHUB_WORKSPACE/* /go/src/github.com/prometheus/prometheus
  #     - name: Fuzzing
  #       run: ./fuzzit.sh local-regression
  #       working-directory: /go/src/github.com/prometheus/prometheus
  build:
    runs-on: ubuntu-latest
    container:
      image: circleci/golang:1.15-node
    steps:
      - name: setup file system permissions
        run: sudo chmod -R 777 $GITHUB_WORKSPACE /github /__w/
      - name: checkout repo
        uses: actions/checkout@v2
      - run: echo "$USER"
      - name: make promu
        run: make promu
      - run: sudo groupadd docker
      - run: echo "$(sudo usermod -a -G docker ${USER})"
      - run: su -s ${USER}
      - run: |
        sudo systemctl daemon-reload
        sudo systemctl restart docker
      - run: |
          su -s ${USER}
          echo "ME"
          promu crossbuild -v
          echo "ME"
      - name: Persist .build To Workspace
        uses: actions/upload-artifact@v2
        with:
          name: .build
          path: .build
